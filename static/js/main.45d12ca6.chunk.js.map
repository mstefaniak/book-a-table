{"version":3,"sources":["context/firebase.ts","lib/parser.ts","components/book/BookForm.tsx","hooks/useGetCount.ts","i18n.ts","locale/en.ts","locale/pl.ts","App.tsx","lib/firebase.ts","index.js"],"names":["FirebaseContext","createContext","firebase","parseSnapshot","snapshot","docs","map","contentObj","data","id","combineDateTime","date","time","hour","getHours","minute","getMinutes","getTime","setMinutes","setHours","defaultDate","addDays","Date","initialValues","area","composeValidators","validators","value","reduce","error","validator","undefined","BookForm","t","useTranslation","useContext","getCount","useCallback","a","collectionRef","firestore","collection","where","startOfDay","endOfDay","get","empty","console","warn","bookings","bookingsCount","acc","currentItem","Number","people","useMemo","useGetCount","useState","success","setSuccess","setError","isNotEmpty","isNumber","isNaN","isValidTime","isValidDate","selectedDate","startDate","setSeconds","isBefore","onSubmit","values","parsedDate","name","comment","status","add","Grid","container","spacing","item","xs","Alert","severity","Button","type","variant","onClick","render","min","max","handleSubmit","submitting","pristine","justifyContent","Typography","gutterBottom","sx","textTransform","Box","src","validate","input","meta","TextField","label","touched","helperText","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","renderInput","params","TimePicker","ampm","minutesStep","FormControl","component","FormLabel","RadioGroup","defaultValue","FormControlLabel","control","Radio","color","disabled","marginTop","Link","href","resources","en","translation","add_new_booking","beta_info","beta_link","book","book_a_table","date_hint","generic_error","invalid_number","name_hint","not_between","other","other_hint","people_hint","place","place_anywhere","place_upstairs","place_downstairs","required","success_message","time_hint","too_many_bookings","try_again","pl","genering_error","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","keySeparator","interpolation","escapeValue","Root","styled","position","flexGrow","padding","backgroundColor","theme","palette","grey","top","bottom","right","left","Card","margin","maxWidth","App","Paper","p","projectId","process","config","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","appId","Firebase","initializeApp","ReactDOM","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.45d12ca6.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport Firebase from \"firebase/app\";\n\ntype FirebaseContextType = {\n  firebase: Firebase.app.App | null;\n};\n\nexport const FirebaseContext = createContext<FirebaseContextType>({\n  firebase: null,\n});\n","import { FirebaseSnapshot } from \"src/types\";\nimport { getTime, getHours, getMinutes, setMinutes, setHours } from \"date-fns\";\n\nexport const parseSnapshot = (\n  snapshot: FirebaseSnapshot\n): Record<string, unknown>[] => {\n  return snapshot.docs.map((contentObj) => ({\n    ...contentObj.data(),\n    id: contentObj.id,\n  }));\n};\n\nexport const combineDateTime = (date: Date, time: Date): number => {\n  const hour = getHours(time);\n  const minute = getMinutes(time);\n\n  return getTime(setMinutes(setHours(date, hour), minute));\n};\n","import React, { useContext, useState } from \"react\";\nimport {\n  addDays,\n  setHours,\n  setMinutes,\n  setSeconds,\n  getHours,\n  getMinutes,\n  isBefore,\n} from \"date-fns\";\nimport { useTranslation } from \"react-i18next\";\nimport { Form, Field } from \"react-final-form\";\nimport {\n  Alert,\n  Button,\n  Box,\n  Grid,\n  Typography,\n  TextField,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  FormLabel,\n  Link,\n} from \"@mui/material\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider, DatePicker, TimePicker } from \"@mui/lab\";\nimport { FirebaseContext } from \"../../context/firebase\";\nimport { useGetCount } from \"../../hooks\";\nimport { combineDateTime } from \"../../lib/parser\";\n\ninterface FormValues {\n  name: string;\n  area: string;\n  time: Date;\n  date: Date;\n  people: string;\n  comment: string;\n}\n\ntype ValidatorResponse = undefined | string;\ntype Validator = (value?: string) => ValidatorResponse;\n\nconst defaultDate = addDays(new Date(), 1);\nconst initialValues = {\n  date: defaultDate,\n  time: setHours(setMinutes(defaultDate, 0), 18),\n  area: \"anywhere\",\n};\n\nconst composeValidators =\n  (...validators: Array<Validator>) =>\n  (value?: string): ValidatorResponse =>\n    validators.reduce(\n      (error: ValidatorResponse, validator) => error || validator(value),\n      undefined\n    );\n\nconst MIN_PEOPLE = 1;\nconst MAX_PEOPLE = 12;\nconst MAX_PEOPLE_PER_DAY = 20;\n\nconst BookForm = (): JSX.Element => {\n  const { t } = useTranslation();\n  const { firebase } = useContext(FirebaseContext);\n  const { getCount } = useGetCount();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState<string>();\n\n  const isNotEmpty: Validator = (value) => (value ? undefined : t(\"required\"));\n  const isNumber = (value?: string): ValidatorResponse =>\n    isNaN(Number(value)) ? t(\"invalid_number\") : undefined;\n  const isBetween =\n    (min: number, max: number) =>\n    (value?: string): ValidatorResponse =>\n      Number(value) < min || Number(value) > max\n        ? t(\"not_between\", { min: MIN_PEOPLE, max: MAX_PEOPLE })\n        : undefined;\n  const isValidTime = (time: Date): ValidatorResponse => {\n    const hour = getHours(time);\n    const minute = getMinutes(time);\n    if (hour < 16 || hour > 20 || (hour === 20 && minute > 0)) {\n      return \"error\";\n    }\n    return undefined;\n  };\n  const isValidDate = (date: Date): ValidatorResponse => {\n    const selectedDate = setHours(setMinutes(date, 0), 16); // 16:00\n    const startDate = setHours(setMinutes(setSeconds(defaultDate, 0), 59), 15); // tomorrow 15:59\n    if (isBefore(selectedDate, startDate)) {\n      return \"error\";\n    }\n    return undefined;\n  };\n\n  const onSubmit = async (values: FormValues) => {\n    if (!firebase) {\n      return;\n    }\n\n    const parsedDate = combineDateTime(values.date, values.time);\n    const count = await getCount(parsedDate);\n\n    if (count >= MAX_PEOPLE_PER_DAY) {\n      return setError(\"too_many_bookings\");\n    }\n\n    const data = {\n      name: values.name,\n      area: values.area,\n      people: values.people,\n      comment: values.comment || \"\",\n      date: parsedDate,\n      status: 0,\n    };\n    const result = await firebase.firestore().collection(\"bookings\").add(data);\n\n    if (result) {\n      setSuccess(true);\n    } else {\n      setError(\"generic_error\");\n    }\n  };\n\n  if (error) {\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Alert severity=\"error\">{t(error)}</Alert>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            onClick={() => {\n              setError(undefined);\n            }}\n          >\n            {t(\"try_again\")}\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  if (success) {\n    return (\n      <Grid container spacing={2}>\n        <Grid item xs={12}>\n          <Alert severity=\"success\">{t(\"success_message\")}</Alert>\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            type=\"button\"\n            variant=\"contained\"\n            onClick={() => {\n              setSuccess(false);\n            }}\n          >\n            {t(\"add_new_booking\")}\n          </Button>\n        </Grid>\n      </Grid>\n    );\n  }\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      render={({ handleSubmit, submitting, pristine }) => (\n        <form onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} justifyContent=\"center\">\n              <Typography\n                variant=\"h4\"\n                gutterBottom\n                sx={{ textTransform: \"uppercase\" }}\n              >\n                {t(\"book_a_table\")}\n              </Typography>\n              <Box>\n                <img src=\"/book-a-table/apple-touch-icon.png\" />\n              </Box>\n            </Grid>\n            <Grid item xs={12}>\n              <Field name=\"name\" validate={isNotEmpty}>\n                {({ input, meta }) => (\n                  <TextField\n                    {...input}\n                    label={meta.touched && meta.error ? t(\"error\") : t(\"name\")}\n                    error={meta.touched && !!meta.error}\n                    helperText={\n                      meta.touched && meta.error ? meta.error : t(\"name_hint\")\n                    }\n                  />\n                )}\n              </Field>\n            </Grid>\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n              <Grid item xs={12}>\n                <Field name=\"date\" validate={isValidDate}>\n                  {({ input, meta }) => (\n                    <DatePicker\n                      {...input}\n                      label={\n                        meta.touched && meta.error ? t(\"error\") : t(\"date\")\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          error={meta.touched && !!meta.error}\n                          helperText={t(\"date_hint\")}\n                        />\n                      )}\n                    />\n                  )}\n                </Field>\n              </Grid>\n              <Grid item xs={12}>\n                <Field name=\"time\" validate={isValidTime}>\n                  {({ input, meta }) => (\n                    <TimePicker\n                      {...input}\n                      ampm={false}\n                      minutesStep={15}\n                      label={\n                        meta.touched && meta.error ? t(\"error\") : t(\"time\")\n                      }\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          error={meta.touched && !!meta.error}\n                          helperText={t(\"time_hint\")}\n                        />\n                      )}\n                    />\n                  )}\n                </Field>\n              </Grid>\n            </LocalizationProvider>\n            <Grid item xs={12}>\n              <Field\n                name=\"people\"\n                validate={composeValidators(\n                  isNumber,\n                  isBetween(MIN_PEOPLE, MAX_PEOPLE)\n                )}\n              >\n                {({ input, meta }) => (\n                  <TextField\n                    {...input}\n                    label={\n                      meta.touched && meta.error ? t(\"error\") : t(\"people_hint\")\n                    }\n                    error={meta.touched && !!meta.error}\n                    helperText={meta.touched && meta.error ? meta.error : null}\n                  />\n                )}\n              </Field>\n            </Grid>\n            <Grid item xs={12}>\n              <Field name=\"area\" type=\"radio\">\n                {({ input }) => (\n                  <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">{t(\"place\")}</FormLabel>\n                    <RadioGroup {...input} defaultValue={initialValues.area}>\n                      <FormControlLabel\n                        value=\"anywhere\"\n                        control={<Radio />}\n                        label={t(\"place_anywhere\")}\n                      />\n                      <FormControlLabel\n                        value=\"upstairs\"\n                        control={<Radio />}\n                        label={t(\"place_upstairs\")}\n                      />\n                      <FormControlLabel\n                        value=\"downstairs\"\n                        control={<Radio />}\n                        label={t(\"place_downstairs\")}\n                      />\n                    </RadioGroup>\n                  </FormControl>\n                )}\n              </Field>\n            </Grid>\n            <Grid item xs={12}>\n              <Field name=\"comment\">\n                {({ input }) => (\n                  <TextField\n                    {...input}\n                    label={t(\"other\")}\n                    helperText={t(\"other_hint\")}\n                  />\n                )}\n              </Field>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={submitting || pristine}\n              >\n                {t(\"book\")}\n              </Button>\n            </Grid>\n          </Grid>\n\n          <Alert sx={{ marginTop: 3 }} severity=\"info\">\n            {t(\"beta_info\")}\n            <Link href=\"mailto:theofficeszczecin@gmail.com?subject='Book a table - error'\">\n              {t(\"beta_link\")}\n            </Link>\n          </Alert>\n        </form>\n      )}\n    />\n  );\n};\n\nexport { BookForm };\n","import { useCallback, useContext, useMemo } from \"react\";\nimport { FirebaseContext } from \"../context/firebase\";\nimport { startOfDay, endOfDay, getTime } from \"date-fns\";\nimport { Bookings } from \"../types\";\nimport { parseSnapshot } from \"src/lib/parser\";\n\nconst useGetCount = () => {\n  const { firebase } = useContext(FirebaseContext);\n\n  const getCount = useCallback(\n    async (date: Date | number) => {\n      if (!firebase) {\n        return 0;\n      }\n      const collectionRef = firebase.firestore().collection(\"bookings\");\n\n      const snapshot = await collectionRef\n        .where(\"date\", \">\", getTime(startOfDay(date)))\n        .where(\"date\", \"<\", getTime(endOfDay(date)))\n        .get();\n\n      if (snapshot.empty) {\n        console.warn(\"No matching documents\");\n        return 0;\n      }\n\n      // @ts-ignore\n      const bookings: Bookings = parseSnapshot(snapshot);\n      const bookingsCount = bookings.reduce(\n        (acc, currentItem) => acc + Number(currentItem.people),\n        0\n      );\n\n      return bookingsCount;\n    },\n    [firebase]\n  );\n\n  return useMemo(() => ({ getCount }), [getCount]);\n};\n\nexport { useGetCount };\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport enTranslation from './locale/en'\nimport plTranslation from './locale/pl'\n\nconst resources = {\n  en: {\n    translation: enTranslation,\n  },\n  pl: {\n    translation: plTranslation,\n  },\n};\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    fallbackLng: \"en\",\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  });\n\nexport default i18n;\n","export default {\n  add_new_booking: \"Book another table\",\n  beta_info:\n    \"This is BETA version of our booking app. If you are experiencing any problems, please \",\n  beta_link: \"let us know\",\n  book: \"Book\",\n  book_a_table: \"Book a table\",\n  date: \"Date\",\n  date_hint: \"Not allowed to book earlier then tomorrow\",\n  error: \"Error\",\n  generic_error: \"Crap! Something get wrong :(\",\n  invalid_number: \"Not a number\",\n  name: \"First Name\",\n  name_hint: \"First name or nickname\",\n  not_between: \"Should be between {{min}} and {{max}}\",\n  other: \"Other requirements\",\n  other_hint: \"Let us know what else we can do for you\",\n  people_hint: \"How many people?\",\n  place: \"Place\",\n  place_anywhere: \"Anywhere\",\n  place_upstairs: \"Upstairs (street level)\",\n  place_downstairs: \"Downstairs (basement)\",\n  required: \"Required\",\n  success_message: \"Booking successful. We cannot wait to see you.\",\n  time: \"Time\",\n  time_hint: \"In the range from 16:00 till 20:00\",\n  too_many_bookings: \"Too many bookings for chosen day :(\",\n  try_again: \"Try again\",\n};\n","export default {\n  add_new_booking: \"Zarezerwuj kolejny stolik\",\n  beta_info:\n    \"To jest wersja BETA systemu do rezerwacji miejsc. Jeśli napotykasz jakieś problemy, \",\n  beta_link: \"zgłoś je nam\",\n  book: \"Zarezerwuj\",\n  book_a_table: \"Zarezerwuj stolik\",\n  date: \"Data\",\n  date_hint: \"Możemy zarezerwować najwcześniej na jutro\",\n  error: \"Błąd\",\n  genering_error: \"Motyla noga! Coś poszło nie tak :(\",\n  invalid_number: \"Nieprawidłowy numer\",\n  name: \"Imię\",\n  name_hint: \"Imię lub pseudonim\",\n  not_between: \"Dopuszczamy od {{min}} do {{max}}\",\n  other: \"Inne wymagania\",\n  other_hint: \"Napisz co jeszcze możemy dla ciebie zrobić\",\n  people_hint: \"Dla ilu osób?\",\n  place: \"Miejsce\",\n  place_anywhere: \"Dowolne\",\n  place_upstairs: \"U góry (poziom ulicy)\",\n  place_downstairs: \"Na dole (piwnica)\",\n  required: \"Wymagane\",\n  success_message: \"Stolik zarezerwowany. Do zobaczenia!\",\n  time: \"Godzina\",\n  time_hint: \"W zakresie od 16:00 do 20:00\",\n  too_many_bookings: \"Brak odpowiedniej ilości miejsc na wybrany dzień :(\",\n  try_again: \"Spróbuj ponownie\",\n};\n","import React from \"react\";\nimport { styled } from \"@mui/material/styles\";\nimport { Paper } from \"@mui/material\";\nimport { BookForm } from \"./components/book/BookForm\";\nimport \"./i18n\";\n\nconst Root = styled(\"div\")(({ theme }) => ({\n  position: \"absolute\",\n  flexGrow: 1,\n  padding: 40,\n  backgroundColor: theme.palette.grey[100],\n  top: 0,\n  bottom: 0,\n  right: 0,\n  left: 0,\n}));\n\nconst Card = styled(\"div\")({\n  margin: \"auto\",\n  maxWidth: 500,\n});\n\nconst App = () => {\n  return (\n    <Root>\n      <Card>\n        <Paper sx={{ p: 4 }}>\n          <BookForm />\n        </Paper>\n      </Card>\n    </Root>\n  );\n};\n\nexport default App;\n","import Firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst isDev = process.env.NODE_ENV === \"development\";\nconst projectId = isDev\n  ? \"book-a-table-96a18\"\n  : process.env.REACT_APP_FIREBASE_PROJECT_ID;\nconst apiKey = isDev\n  ? \"AIzaSyBCooZY6_EXqK5bDrW-toY0IGJ_xM7B8bE\"\n  : process.env.REACT_APP_FIREBASE_API_KEY;\n\nconst config = {\n  apiKey,\n  authDomain: `${projectId}.firebaseapp.com`,\n  databaseURL: `https://${projectId}.firebaseio.com`,\n  projectId,\n  storageBucket: `${projectId}.appspot.com`,\n  messagingSenderId: \"173934858452\",\n  appId: \"1:173934858452:web:50fdcc7645b3d229572b41\",\n};\n\nconst firebase = Firebase.initializeApp(config);\n\nexport { firebase };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { firebase } from \"./lib/firebase\";\nimport { FirebaseContext } from \"./context/firebase\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <FirebaseContext.Provider value={{ firebase }}>\n      <App />\n    </FirebaseContext.Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}